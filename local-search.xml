<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>01 命令注入</title>
    <link href="/2022/07/21/01-%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5/"/>
    <url>/2022/07/21/01-%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="命令注入"><a href="#命令注入" class="headerlink" title="命令注入"></a>命令注入</h1><blockquote><p>Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application. Command injection attacks are possible when an application passes unsafe user supplied data (forms, cookies, HTTP headers etc.) to a system shell. In this attack, the attacker-supplied operating system commands are usually executed with the privileges of the vulnerable application. Command injection attacks are possible largely due to insufficient input validation.</p><p>This attack differs from <a href="https://www.owasp.org/index.php/Code_Injection">Code Injection</a>, in that code injection allows the attacker to add his own code that is then executed by the application. In Command Injection, the attacker extends the default functionality of the application, which execute system commands, without the necessity of injecting code.</p></blockquote><p>以上来自<a href="https://www.owasp.org/index.php/Command_Injection">Command Injection - OWASP</a>，翻译过来就是通过易受攻击的应用程序在主机操作系统上执行任意命令。当应用程序将不安全的用户提供的数据（表单，cookie，HTTP标头等）传递给系统shell时，可能会发生命令注入攻击。 在此攻击中，攻击者提供的操作系统命令通常以易受攻击的应用程序的权限执行。 命令注入攻击很可能主要是由于输入验证不足。此攻击与代码注入不同，因为代码注入允许攻击者添加自己的代码，然后由应用程序执行。 在命令注入中，攻击者扩展了执行系统命令的应用程序的默认功能，而无需注入代码。</p><p>命令注入，也可以称为操作系统命令注入，其主要是指用户输入的数据（命令）被程序拼接并传递给执行操作系统命令的函数进行执行。其中不同的语言如果支持执行系统命令的API接口，则都有可能存在命令注入漏洞。</p><h1 id="0x01-命令注入白盒源码检视"><a href="#0x01-命令注入白盒源码检视" class="headerlink" title="0x01 命令注入白盒源码检视"></a>0x01 命令注入白盒源码检视</h1><p>白盒源码检视重点是通过源码进行代码检视，通过对代码进行分析，从而高效的进行漏洞挖掘。但是由于代码开发中使用的语言不同，所以针对不同的语言，其在白盒源码检视中侧重点也不同。本部分主要针对不同语言中的命令注入漏洞原理进行分析总结，识别其具体的根因。</p><p>首先针对命令注入类漏洞，我们需要重点关注的代码类型为——<strong>需要执行系统命令，同时执行的命令和用户输入有关</strong></p><p>具体排查方法是——<strong>源码搜索使用shell解析器来执行OS命令的API，当用户输入被用作命令参数或脚本参数，并且没有核实的过滤，则存在命令注入</strong>。接下来会针对每种语言中可以支持shell解析器执行OS命令的API接口进行分析。</p><h2 id="1、JAVA语言"><a href="#1、JAVA语言" class="headerlink" title="1、JAVA语言"></a>1、JAVA语言</h2><p>Java执行系统命令有两个方式，ProcessBuilder和Runtime exec。</p><h3 id="危险函数"><a href="#危险函数" class="headerlink" title="危险函数"></a>危险函数</h3><h2 id="2、C-x2F-C-语言"><a href="#2、C-x2F-C-语言" class="headerlink" title="2、C&#x2F;C++语言"></a>2、C&#x2F;C++语言</h2><h2 id="3、Python语言"><a href="#3、Python语言" class="headerlink" title="3、Python语言"></a>3、Python语言</h2><h2 id="4、PHP语言"><a href="#4、PHP语言" class="headerlink" title="4、PHP语言"></a>4、PHP语言</h2><h2 id="5、GO语言"><a href="#5、GO语言" class="headerlink" title="5、GO语言"></a>5、GO语言</h2><h2 id="6、RUST语言"><a href="#6、RUST语言" class="headerlink" title="6、RUST语言"></a>6、RUST语言</h2><h2 id="7、Shell脚本语言"><a href="#7、Shell脚本语言" class="headerlink" title="7、Shell脚本语言"></a>7、Shell脚本语言</h2><h1 id="0x02-命令注入特殊字符防御"><a href="#0x02-命令注入特殊字符防御" class="headerlink" title="0x02 命令注入特殊字符防御"></a>0x02 命令注入特殊字符防御</h1><p>特殊字符的拼接，如果未进行有效的命令注入防御则将会存在命令注入攻击。</p><h1 id="0x03-命令注入绕过与利用"><a href="#0x03-命令注入绕过与利用" class="headerlink" title="0x03 命令注入绕过与利用"></a>0x03 命令注入绕过与利用</h1><h1 id="0x04-命令注入验证工具分析"><a href="#0x04-命令注入验证工具分析" class="headerlink" title="0x04 命令注入验证工具分析"></a>0x04 命令注入验证工具分析</h1><h1 id="0x05-命令注入攻击场景与防御方式"><a href="#0x05-命令注入攻击场景与防御方式" class="headerlink" title="0x05 命令注入攻击场景与防御方式"></a>0x05 命令注入攻击场景与防御方式</h1><h2 id="1、压缩包注入攻击防御"><a href="#1、压缩包注入攻击防御" class="headerlink" title="1、压缩包注入攻击防御"></a>1、压缩包注入攻击防御</h2><p>一般情况下，针对压缩包文件需要进行解压后进行相关校验：</p><p>1、检查是否对zip文件解压缩后大小进行校验</p><p>2、检查是否对包含目录穿越字符（如..&#x2F;）的文件名进行校验</p><p>3、在linux环境下，对压缩包中的软链接进行校验</p>]]></content>
    
    
    
    <tags>
      
      <tag>攻击模式库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从新开始再出发</title>
    <link href="/2022/07/21/%E4%BB%8E%E6%96%B0%E5%BC%80%E5%A7%8B%E5%86%8D%E5%87%BA%E5%8F%91/"/>
    <url>/2022/07/21/%E4%BB%8E%E6%96%B0%E5%BC%80%E5%A7%8B%E5%86%8D%E5%87%BA%E5%8F%91/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="08693adad0d5e77e995c4d89cab2edcda927cc0bad83d0af9c356370e3c068de">c5cfa8977c41a4240fd5014f8a3e7cb9bb5d73099347eb3b3c1235cdc5065a1f248e76035685fa59f4828704182d474ef4198d8531a7e2426280692535425a006a16bcd9e46524be18c66429de1f5622544c4474f4fd6257f8555f601db35807869845ae7025d01bf7dcb5e47400c64ebb65b064eb7be9d90fd9f3f6167837523e7795916bc56d3cfe43bc66bec36f393b4f7277d809af79822a3b3544aefa0225e37e79b338a974fc6e1cbde5ac783bb9aa8478dbdca928a8feee8aeaa11a91beb3d3ede692659b06ccf9fe234cf23607c766f0d835856a5fd5be57fa999175d9d1f93b55218e453190c4832e6a058afd345faa88ad6f0c60f05424db129909daa419925fa93ad94904101692ef2ec554161926ed7e288ef6cece6dfb04f2958b92839e783baa9838168d283d9594a047f02dcede9c53230fe928b03386f652b08e20d942472bb52c3af8c4cd24f525cb4e4632b6df0f026bde7c2a99513ff794c5a0de81784d80f33d4d3504340ac9f0ab2d5a52fe1597dfa3bc55231109520575acf1a1c749cd3a6a18b1ad1f5844beb0bc087854a52a6b9ee7025dc060555ead1638572248a99731ffc41e71bdba7e4e2d5c70c62f9f694282e77a7c8943280917eeaa591f15d7675b8475ba46784fdf6c1fce4d7dfc56084cd47417fa3fb16f45b9c0b44ce306973eea3b9855cb283ebdd43ef3754e0ff4fffbf175dc8adec6a2f79de6aae9909890a46261e69b2e8f2ab49c9acdd52f9ac1d7025c650222b43e2a020c18c4d91d1abafb1e8f8736ce7946b4594eadab09c2da4c57938ce360bd2654bf84ee82eb7a07257ec964c59d99df87afc998aefe2de6df885b43b6514a4c2758a818d11f4d04b9316a845967932e5d2b2977030f119f425054c69eade70607dafea7e17ad03f57d2696420c283b0ad0ae7d1fff1f96b55130ea70244d9ab834067b98524bce9995ebb1eec2eb6e9d80b7b4cefac2899cad5a70b81212da553a0953ffdfe3ef27e924eea951420c8228b7b12c975f702a57c5e55f0910e28a1da63e5a87aa4cc06937a74176676c1b6dcdda9b31bdac66af927877afdbfd406c46f4fadf83a3748490226967a708f46b3c479f99dabaf8784cac3c325009e0c09213c4d4827763e6487f17dcc41dd0b964a00a8cb2bbc0819306238cd8c73b7a4dac2c9bd3c38af4a668a7eb9932c10192353fdeadb934ca337c12240a5dbca3e8f280fc349fefb98ff8d5726b60d2ce4f2e8557d3285733ff806977df4653b6c4982609972359e1dabbe6b826c3fcc94c8408f4db4c27240c2994421940ea0f3baf14acf870f138c1610205ec5a3f31d5b134396e4125cba2fcb542f6aee9c679dbcf807b7963cea8458c20f0a249c8dad030ee96e1e176439c812c9aed65751d9a822c3a3fedaa140258342d23911a590554a1ea87b424191bf5208d1acfd10dc156a3c55238a5536f2249836d7a8bf607cc2f9092e078bc1e223931690d1560c94f271390a9446b35f9fefc414f5e9e09fc438baec152bdf92f8573b3e155a1ee14a637666dbc1fee815d7e35afcc26c5e5cf8c0be3d0c37a26bd74ce7f72fa746c30e20b65ac1a14ddbd55ab2622af27d3d3e3fa49fdb23c0f158d17b337321734c65fafa66d740a3e983f9718ab773fb24348ca03b3b9a8d0e42906f7c7cb45a8846286a7c7209f8e525189b25d10bd31aa69ba0e480067c531ece692de1e452add1dc2a27b65ced85feed5dc81e7dde98f23d906ad48ba96157c455b2da908f8529ccf9ee0ca324b9b724715c2d61d763e7a555dea179cd031229414121ff81f6735c873b090e4f6cd86709e1254290707167b67b581136132288ec942c02f573668526bd50051f925c26b4dd102484603c729779eec36a8a254f9b771da1c98e860f8dc717ec3b254b7aab05d1cda07f11507142e205b26ee0aa998e4f8752ac3a84dd57b243b5ed598f9aece849527b2c1dbe5747306391c73f01b895fa6e640689ccdfcaff65c9ce1d42a87beca37582092cdf952f86b9450dd892e342f5e2fd7ee9a492dafc4af2422dc92f4d431f365637bd287d00bc46800b8bf1d004be71a8f7af326baa9856b565b99bda444591fb8657dbf045c47e6338d3af576abace9816b72ddb5655cbcb3919e7bbcc8bb3992bea10f9f73bf660c4156b842a3753f44f97e3c0acc157df31ba6675c98c063931b770bf2084030ff7aeda05bef5bbd21ecd403e0b870edc5269ed2fd1648d6d5a679d36c411a4b1dc9b4d832b332b1386453f9bebc948d30c911552734c67105b376f57ad74867abc9d5fe1e93465ae68d2ac8ae9df7d76b91ad0b607bcbcfd438178f87661b6408881031d9bc5dad3539ff1ef8fa1da16dc6dd48c96172e15064fda980a381857afbf015104b5fd42f04d9bdb26e6383f3edaee5d19de92ae71016275f15df15e15f89cc2e6dd24391519a78be18503bb9e2dfe622684372b40258ad9ac6fa9fa59080398355f951f49ce6a919523ff48c5d584f1c500988657a4dc2e4d658d9139eab50283c2333c4407bb73135ebc0aee5f0528f4b30158f6d7c775b81992280d1aaeac11460acb90378d07ef8e373271d3103477d109b725c1314afcd27f8a3174077dd2491c57ba9f96f34ecd660fb5148b2e7544baaa002798402b320daf382a44d09190b2b62e4752da553d177fcfed0232e6db0b2eba347e833443ddf2be618e3ab0a6586a0ec3caa73bf8ef7d4e1a3b1d0058027005efebee1907dd31f4115e23ad10eeaef45875c72b643e74673d87c83cff7222f5ca3d9332bd7657f176b0a8c5a9dc279c264d9933f3b0ec8b52e72e758644045694939573a7ba6b50cbc27734ff2e6bda826554498250ea9ed6084a7367675551c15dc763df6ed37c28910e52fce5066069bc5860eee9b93d49cdefc3bfa4f981f18f5497545011463f9129639de5577a349044124bd8f22c49951448abd4b8e1ae1910a53479e77cafac0f633e08ff53acb52dc4d69a755a2f3dce5a2e1537cdfb0da9437e7ad6c9a1fd36bda58b8a9b3d5dacc7dc01fe20fb92bec02f634594fa4c263850e508b58ff059770048639207c192d4264f697aa30739ed9d84fd26b15ff8696393f48e5b46e45ec246dfd15cd09d63e639c8faba660660ef47614403d1bb07830c199c78c77d0bca29dceb24ef7c347e4efa15883a30815b77ea6d01da4252be8533108db0efff12d17105fef9551c9943631de36548a6c435447d80b9b9e421d84f42ac7a6cdccafc1da24c61a4530209f2dea5339626093b1babf6447d0666450310ebd471b47e5d7095a5d5c507219b3b197a13dd5da0a0cbdb6e172b750e1f12b480f328d082e353ef389e9834b77c66179d6263e1429d86dac38d92b8e583443420599643620d32d9493761cbbd8651bf8541b0fd7527075f96bc74cd6a369010c4268d44555c8bfb2060250fb19f3afe40ec2e20c54972a1a744e4ba2a543d3742bf39d6714ea3711bb0dd82dec42473ed2aa79d353a2b1b0780ff5421afb697b8c526f17dcdd5d781320678484356f8283af7a33c49a35e531c66dc69634f421994f309fac85cc255e8b473f56810897e1c33d65c3882bb036d5a2de491149deaed2fd5d8127961629264fd37f3c924f32810d746b2f93d375cb47f02f59fda603ca271d82d3f81117d2ac53d7e9d19620356661bd5ab4b293bfe4cac8f2b9e6deb866b487ab7a5af3da1e176f622a73ebb338ce63e53fb3b3f3721e27cfbe4429231bc022129b1bbba5ddaecafe5a3d151ea0da92ea6b3b9356db0ffa1bb863b36637ac2d272de1c43aad4c7663bc4cbb6abaec4a7d7cd961dd11d8ccb8e45b3b874c24a681e7eaf1052c7ad67d0f80603d7ab01d5b397cd423d7efd03d5466dcf77fa67709f6652ed78b54d9ad3bb8031b1ba4ebc319ff8d82f5704671fb9bbf568ffa8b6bc57e591c736611f26430b9b01fe13b13a7f464dc5c2be11422e7d6ac3939b1186eed211804517fe9d7dab6587065974b8677aa9b5f6cddd41959872c6ac7bb66d76fbeccbdb9abd0d908b0537887db0e169ad133a5555b163f25206cf1edad54ddecb0a2d8a439d52cc9b45aea467f872352aefe10888f46af0fb101875d8b2ab8e89c5ac635f5c7e6c52f261a6967dac442652b72858c78fe25db11e4c4f3c6fbf0f16dbaa8486a139828361609963ae3b760c372df04a55fe00aa623a6c66e8d079b1bc7d85e8d979d1fe366e62ac622e059531d05b4b72cc4282cfd92564f14453a1f8dfd44cac11a4733910e8e8eac161b83833624b1648aec5aa80d38af45abef4636afb64fbd6e798d8b8977b32659be9ebf9df86f23e8e45a3eceb5e2b3cb4cfe0088bbe7d34fb1bbf9bad1ed99d15949461a99659a1682a52273c6b66b891e7940686255f3dc9d7e49f01e4b0f749cc9ac81bc5c8ca88805e843796d8370d0c5651b0df0ad8fb7ed48dbc699dd51a2b897fd2a6459bf293db5a479ddf79c41b167322a77edb4a7eed1c0f7571d017b576177061044791feee346c52d0bab52f0f695d29df60f2b78523b8c4d2031221350169205270f26ed3afeab7620e8593cad71e17e54e3d577f0de7cd669214a152fe3cb62432f3565cf207f8029cdbc0b6e173df37668e7c45fd157e191314fe868bc7ad26e552f119eb26f606f9294de42c62b07df0ea437ce2e69a7612208e1d4b9634085eaec21fad82542c26cf4471f1bdae31f81e96e3ec73a9abada4970e9ccf00ee666ec98ae2e37445da84cca3443a31b88a4ddc5e00a9310f9e74fce79c970d6c5c9e4cb74c94ffba186ad4c59e45a6cfe9c9ee2d8bd83e48750e57b57b336362b2ecac04c5d2f52c69d65fac7409a87721323d385f55482537d659b1fcf561f731225f44ad582904ba5bf1f3660eb0b1a042c4f90a5d4893ab16b0acb111aaeb7e12ab30dcd16d5a078073d09acd3a4087b9053c30207b60aac80026e2f88612e29e70eb5d788f3d910e719bad76222bf37bf4bae00af34699f7209eb651e2a37793ee30be34ef86a2e3703c107d1fcd5380540ff3af03ff88b518d79aef719684182114557641f13e9c3d0e18637a5aac3d41d9d16f1308f00584595ee2e264741d5a3cd40421ff909fbb307ce81ee026db1bb819f49c4fa4a750f6edf83c70be301fff86392345c4f43ac146f1728841fae18425fa696e617249679afa997e440466c3740a6ba1e21d40e5488eadc3335e389633a18f5b63e140842df060a27b743eaf03488c430134f7ab366279c931f5aeb4fa63f7f52547dd5f52fa42bacb7ca9a19c0d49649647694216a79051d98effc8d9d6565853a06ec98a5c036fdc9826f86e137a01d069a3edc79311faf721dd6450d96c9351892b4990f54dcf827a208edeccca88c2457b094d2e2c48b6bcc80b3251433a54e4000644d523b76205eaf4aa9c0f58ebf3ad47ddb8a6460bd0efcf37487dbdca2889293497c51af012c644ef68f0e6daa5ed44e81a5ed1d02616b33a8590daf3f24c416e55d00310c562726cd02f8e0df8d669d9fcca9b8d6579ea031e8bd0f547719da120dd4bb205a3467cd5b3f6063cd1ae4e887f4d709a49b583a3ee06709d62a0720b81fced2e5360b459e7c8f6d95026a30460ca4284cc74c623853c03903de80bf931924a11f855ccc86671f29f17c20fe5684154eb17a64eaa3c949500b6d04d6a8afa7cfa83de4b7e80d2734ef44daa578d4c9f126358f089c6303954dc2a3eef1df80c04f872dd58c4031e6adf62580d2bf627d8e6b730e7251fc67ee1a9e81e8ab06feac178d427993876a4faf5ea6f19302214a3cbb5430e1288cd2814b2f0ec6242beb458adc326cc154c8b82e8b9192b1fd42ab5b4f109e05b4adc55912c7ee01ee31b0cef59daee3639e9fac60700797e42cef42bc251749d98f210d628ba4b270329f7ea2242b96b553f37853605fb57dfa0a768ec2d6e9dafdff319e8920740696573c1a4f0fdbe026aaebda6af3f2b663675e40757c5080ea7ef5a996f47d193140af24ccd839cdf9db66ba960d4267e50754054a54f7bfbec10080f25deee2f1f31e4ac1de754e89bb37aebf0b81dec5cba30eced6ae92192566bcd6d4c0946c3866e80ae203731a898b1c6537156e4854afaff4de23a1f4b93a98a947dfaf09318f1e323714cbbc98e205e6ecf7ca2ab0cf8cf9de440ac12e543f08d3f2cdbe46dd99a2cfc4be7424962f10ee7e6c4c6dba469849191719adf2d9e9bb780d1a6619826e848691e9d2f931ee2f7bd2b853981a9070ed74624a1b9500f087ace92e24cfd90663f48202146604402e330a72a1ff72406c4a1f95316df8248ab1408e1ed8a2dac64ab78299264f4d5e5b4dc1cee92511d752fc8619c5618e218ac9e39c36bb4c220737533ed692ce38aad41dc5d23413675f484b06c7ade6d5716c96fc53265586af0d6311bd82dd5b26b8ebf2f4b97443743e508b87d3a69967c7bed70f48413e67842fc6e76fbdc85b1f3067fb1a1a19c17bf83a383e9722a0e741cdf3762ef1f79604fbd7d1265e719c3b4f747d9a70592e27eb6677da629b5f7d47c3ecfe8504e8f461426264120d9a53ef1f74ab13e7e85ece0dae8a29a21104c1c6052ccb0e42b143c576f0344c52a6b1cd20725f9d8a874b3451dd295549734246a148a109ae6b44e7d8bf051d0f9d3affbb308041edce69a040f64a0c9d232e00ea16ee2afab6ab7ddfbd5d56ebb6609b1a666c4e6db1e39f0e2b4b305cf4db9ee9da59727d8a46663b65311f489ec3f1aa2d224b2c41f5916a6b92322f310204c34d8807d081bea87765f31239e64b972e923a071b29241fd234ff08c612991dee305773ee0d83a46483d30768a93808089c53122afbe82f22855f7cdbb71697c4be62819dcf9ec8b5c4ac68568222ef920d5581dedba61089037767c0fe61d1b381f71f738dd6e958486262dfe3505ace86bd0e059cfa7480e8df18de1ede5d562dbf008eb870620bee5a31a043dd3d6670481cedbfe315b6d5d94c9a81613788a0a740dbf2dd8db4002e6d7ea9ea376720905239ae423d320d4188d683eed001d56e6ee46e89e0b9e1cdc426f4f64fb9e98f5d5fd07b64607fcd50e679b752b64ed170fa9a0e9832172a329445cbacf3fb1c2873bbfeb2aba0185e103a5ffd5f8cb8b5c048f0da208399182fba00e0ea2545a7737250f10fec3df65ee9964d658217dfe1f693f37b479aafb462f11366d059183953b4a0ca0f37566656cf4e1df9d72774537e529f658e7e82b9e7c72ffa9311d8ffcadb94fcbf67f504c7236456408f05f7ee435d59eeca6f460170b6dbe02b755ee77a116141b2ff15712659e9ab72f7891f6202f64789eaddb9e215e729d1015f53957acc494c9d80feb467c410b128cf7bf5305b1e7dbeea918e0fe2b5268eb97a0152af164612662fd51fcbdb213025e3020031e0e47f6cbc81dfd7467282fff09ff5b75615d47e2bda89072db4e667ee7a5be084cd71b8e6a046c83c235d3a47f840f47d05e6fb74319ce7161f4e9d04b1ff6c589e7f5b80095a889a6855f7e7e9010c08aae65fffb3264cc8468c4beacd5a652efc4c93ca765ef2ca4e7b6bc4747562a8eb5b3d606f5348bdbf8b81e407007904808878c188950646d5cb119c291a90240129dd5d35bb8b320bb2f910a979b5ade7b695d921679cb3fae2ec08b6e7418fc78021722de1622c994a0e43ac6e0d7d61aa1dff259bcd3348e12cbe1da1db7d83c94165ba2c23e836917b3f1d1c1ad9106c34f0d30afcc5eb9a8704be5e0a73c72aa338d3b976ce151e865a035b942dda5af487b614ef767f1cd96e56c1e92952d6b121b3b419a776ebd1f08866e4b7df26a2ca87a2bcaab23b3790d</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>00 靶场搭建</title>
    <link href="/2022/07/21/00-%E9%9D%B6%E5%9C%BA%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/07/21/00-%E9%9D%B6%E5%9C%BA%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="vulstudy"><a href="#vulstudy" class="headerlink" title="vulstudy"></a>vulstudy</h2><p><a href="https://github.com/c0ny1/vulstudy">https://github.com/c0ny1/vulstudy</a></p><h2 id="Vulhub"><a href="#Vulhub" class="headerlink" title="Vulhub"></a>Vulhub</h2><p><a href="https://github.com/vulhub/vulhub">https://github.com/vulhub/vulhub</a></p><h1 id="0x01-JAVA语言靶场"><a href="#0x01-JAVA语言靶场" class="headerlink" title="0x01 JAVA语言靶场"></a>0x01 JAVA语言靶场</h1><h2 id="SecExample"><a href="#SecExample" class="headerlink" title="SecExample"></a>SecExample</h2><p><a href="https://github.com/tangxiaofeng7/SecExample">https://github.com/tangxiaofeng7/SecExample</a></p><h2 id="java-sec-code"><a href="#java-sec-code" class="headerlink" title="java-sec-code"></a>java-sec-code</h2><p><a href="https://github.com/JoyChou93/java-sec-code">https://github.com/JoyChou93/java-sec-code</a></p><h2 id="PortSwigger"><a href="#PortSwigger" class="headerlink" title="PortSwigger"></a>PortSwigger</h2><p><a href="https://portswigger.net/web-security/all-labs">https://portswigger.net/web-security/all-labs</a></p><h2 id="WebBug"><a href="#WebBug" class="headerlink" title="WebBug"></a>WebBug</h2><p><a href="https://github.com/Mysticbinary/WebBug">https://github.com/Mysticbinary/WebBug</a></p><h2 id="JavaVulnerableLab"><a href="#JavaVulnerableLab" class="headerlink" title="JavaVulnerableLab"></a>JavaVulnerableLab</h2><p><a href="https://github.com/CSPF-Founder/JavaVulnerableLab">https://github.com/CSPF-Founder/JavaVulnerableLab</a></p><h2 id="dvja"><a href="#dvja" class="headerlink" title="dvja"></a>dvja</h2><p><a href="https://github.com/appsecco/dvja">https://github.com/appsecco/dvja</a></p><h2 id="Hello-Java-Sec"><a href="#Hello-Java-Sec" class="headerlink" title="Hello-Java-Sec"></a>Hello-Java-Sec</h2><p><a href="https://github.com/j3ers3/Hello-Java-Sec">https://github.com/j3ers3/Hello-Java-Sec</a></p><h1 id="0x02-PHP语言靶场"><a href="#0x02-PHP语言靶场" class="headerlink" title="0x02 PHP语言靶场"></a>0x02 PHP语言靶场</h1><h2 id="pikachu"><a href="#pikachu" class="headerlink" title="pikachu"></a>pikachu</h2><p><a href="https://github.com/zhuifengshaonianhanlu/pikachu">https://github.com/zhuifengshaonianhanlu/pikachu</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>能力积累100天</title>
    <link href="/2022/07/20/%E8%83%BD%E5%8A%9B%E7%A7%AF%E7%B4%AF100%E5%A4%A9/"/>
    <url>/2022/07/20/%E8%83%BD%E5%8A%9B%E7%A7%AF%E7%B4%AF100%E5%A4%A9/</url>
    
    <content type="html"><![CDATA[<h1 id="能力积累100天"><a href="#能力积累100天" class="headerlink" title="能力积累100天"></a>能力积累100天</h1><p>（2022.7.21 ~ 2022.10.29)</p><ul><li>2022.7.21 命令注入 —— 检视篇</li><li>2022.7.22 命令注入 —— 攻击防御篇</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>《深入分析Java Web技术内幕》读书笔记</title>
    <link href="/2022/06/16/%E3%80%8A%E6%B7%B1%E5%85%A5%E5%88%86%E6%9E%90Java-Web%E6%8A%80%E6%9C%AF%E5%86%85%E5%B9%95%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/06/16/%E3%80%8A%E6%B7%B1%E5%85%A5%E5%88%86%E6%9E%90Java-Web%E6%8A%80%E6%9C%AF%E5%86%85%E5%B9%95%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="0x01-总体概述"><a href="#0x01-总体概述" class="headerlink" title="0x01 总体概述"></a>0x01 总体概述</h1><p>0x02 </p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hexo Github 搭建个人网站</title>
    <link href="/2022/06/16/Hexo-Github-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
    <url>/2022/06/16/Hexo-Github-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<h1 id="0x01-准备工作"><a href="#0x01-准备工作" class="headerlink" title="0x01 准备工作"></a>0x01 准备工作</h1><h2 id="1、GitHub账号"><a href="#1、GitHub账号" class="headerlink" title="1、GitHub账号"></a>1、GitHub账号</h2><p>注册一个GitHub账号，具体可参考<a href="https://blog.csdn.net/yaorongke/article/details/119086305">GitHub申请账号</a></p><h2 id="2、安装Git"><a href="#2、安装Git" class="headerlink" title="2、安装Git"></a>2、安装Git</h2><p>安装Git，具体可参考<a href="https://blog.csdn.net/yaorongke/article/details/119085413">Git安装(Windows)</a></p><h2 id="3、安装NodeJS"><a href="#3、安装NodeJS" class="headerlink" title="3、安装NodeJS"></a>3、安装NodeJS</h2><p>安装NodeJs，具体可参考<a href="https://blog.csdn.net/yaorongke/article/details/119084295">NodeJS安装及配置(Windows)</a></p><h2 id="4、安装Hexo"><a href="#4、安装Hexo" class="headerlink" title="4、安装Hexo"></a>4、安装Hexo</h2><p>安装Hexo，具体命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装Hexo</span><br>npm install -g hexo-cli<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看版本</span><br>hexo -v<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建一个项目 hexo-blog并初始化</span><br>hexo init hexo-blog<br>cd hexo-blog<br>npm install<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">本地启动</span><br>hexo g<br>hexo server<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">浏览器访问 http://localhost:4000</span><br></code></pre></td></tr></table></figure><h2 id="5、Git与远程仓库GitHub配置SSH加密"><a href="#5、Git与远程仓库GitHub配置SSH加密" class="headerlink" title="5、Git与远程仓库GitHub配置SSH加密"></a>5、Git与远程仓库GitHub配置SSH加密</h2><p>具体的操作过程，可参考<a href="https://www.cnblogs.com/eidolonw/p/13068373.html">配置SSH加密</a></p><h2 id="6、图片设置"><a href="#6、图片设置" class="headerlink" title="6、图片设置"></a>6、图片设置</h2><p>1、配置Typora偏好设置，将图片文件保存路径设置为.&#x2F;${filename}，即保存与当前正在编辑的文件名相同的同级文件夹下，具体配置如下</p><p><img src="/2022/06/16/Hexo-Github-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/image-20220616102900815.png" alt="image-20220616102900815"></p><p>2、修改hexo中的_config.yml中的post_assert_folder的配置为true，这样，每次<code>hexo new page</code>生成新文章时吗，都会在文章文件同级目录创建一个与文章文件同名的文件夹，后续图片就会存在在此处。</p><p><img src="/2022/06/16/Hexo-Github-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/image-20220616103305419.png" alt="image-20220616103305419"></p><p>3、安装插件hexo-asset-img</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-asset-img --save<br>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s<br></code></pre></td></tr></table></figure><p>4、提交文章</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo clean<br>hexo generate<br>hexo deploy<br></code></pre></td></tr></table></figure><h1 id="0x02-增值服务"><a href="#0x02-增值服务" class="headerlink" title="0x02 增值服务"></a>0x02 增值服务</h1><h2 id="1、更换主题"><a href="#1、更换主题" class="headerlink" title="1、更换主题"></a>1、更换主题</h2><p>安装主题——下载 最新 release 版本 解压到 themes 目录，并将解压出的文件夹重命名为 fluid。</p><p>指定主题——如下修改 Hexo 博客目录中的 _config.yml：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">theme: fluid  # 指定主题<br>language: zh-CN  # 指定语言，会影响主题显示的语言，按需修改<br></code></pre></td></tr></table></figure><p>创建【关于页】——手动创建</p><p>创建「关于页」</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> about<br></code></pre></td></tr></table></figure><p>创建成功后，编辑博客目录下 &#x2F;source&#x2F;about&#x2F;index.md，添加 layout 属性。</p><p>修改后的文件示例如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">---<br><br>title: about<br>date: 2020-02-23 19:20:33<br>layout: about<br>---<br><br>这里写关于页的正文，支持 Markdown, HTML<br></code></pre></td></tr></table></figure><p>本地启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo g -d<br>hexo s<br></code></pre></td></tr></table></figure><p>浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a></p><h2 id="2、个性化页面"><a href="#2、个性化页面" class="headerlink" title="2、个性化页面"></a>2、个性化页面</h2><p>后续待补充</p><p>后续参考文章进行补齐：</p><p><a href="https://yafine-blog.cn/posts/4ab2.html">https://yafine-blog.cn/posts/4ab2.html</a></p><p><a href="https://nflj.github.io/posts/a2ae.html">https://nflj.github.io/posts/a2ae.html</a></p><h1 id="0x03-日常运营"><a href="#0x03-日常运营" class="headerlink" title="0x03 日常运营"></a>0x03 日常运营</h1><h2 id="1、创建文章"><a href="#1、创建文章" class="headerlink" title="1、创建文章"></a>1、创建文章</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">常使用的命令说明</span><br>hexo new page tags/about/...  #创建页面<br>hexo generate &amp;&amp; hexo server #本地生成并预览<br>hexo generate &amp;&amp; hexo deploy #将内容推送到github上<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">命令帮助说明</span><br>Usage: hexo &lt;command&gt;<br>Commands:<br>  clean     Remove generated files and cache.<br>  config    Get or set configurations.<br>  deploy    Deploy your website.<br>  generate  Generate static files.<br>  help      Get help on a command.<br>  init      Create a new Hexo folder.<br>  list      List the information of the site<br>  migrate   Migrate your site from other system to Hexo.<br>  new       Create a new post.<br>  publish   Moves a draft post from _drafts to _posts folder.<br>  render    Render files with renderer plugins.<br>  server    Start the server.<br>  version   Display version information.<br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash">Global Options:</span><br>  --config  Specify config file instead of using _config.yml<br>  --cwd     Specify the CWD<br>  --debug   Display all verbose messages in the terminal<br>  --draft   Display draft posts<br>  --safe    Disable all plugins and scripts<br>  --silent  Hide output on console<br></code></pre></td></tr></table></figure><h2 id="2、上传到Github"><a href="#2、上传到Github" class="headerlink" title="2、上传到Github"></a>2、上传到Github</h2><h3 id="2-1-方式一"><a href="#2-1-方式一" class="headerlink" title="2.1 方式一"></a>2.1 方式一</h3><p>通过hexo-deployer-git直接上传</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">1、安装hexo-deployer-git</span><br>npm install hexo-deployer-git --save<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">2、修改根目录下的 _config.yml，配置 GitHub 相关信息</span><br>deploy:<br>  type: git<br>  repo: https://github.com/yaorongke/yaorongke.github.io.git<br>  branch: main<br>  token: ghp_3KakcaPHerunNRyMerofcFd9pblU282FSbsY<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">其中 token 为 GitHub 的 Personal access tokens</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">3、部署到GitHub</span><br>hexo g -d<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">浏览器访问github网站，部署成功</span><br></code></pre></td></tr></table></figure><p>其中token 为 GitHub 的 Personal access tokens，具体获取方式如下：</p><p><img src="/2022/06/16/Hexo-Github-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/2350558a10d94c8ab4959b04771d2bcc.png" alt="请添加图片描述"></p><h3 id="2-2-方式二"><a href="#2-2-方式二" class="headerlink" title="2.2 方式二"></a>2.2 方式二</h3><p>直接将 <code>public</code> 目录中的文件和目录推送至 <code>GitHub</code> 仓库和分支中。<br><img src="/2022/06/16/Hexo-Github-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/efdfd2d6cf5d4551af0eabfa565f4a1e.png" alt="请添加图片描述"></p><h1 id="0x04-问题记录"><a href="#0x04-问题记录" class="headerlink" title="0x04 问题记录"></a>0x04 问题记录</h1><h2 id="1、报错-FATAL-TypeError：-object-fromentries-is-not-a-function"><a href="#1、报错-FATAL-TypeError：-object-fromentries-is-not-a-function" class="headerlink" title="1、报错 FATAL TypeError： object.fromentries is not a function"></a>1、报错 FATAL TypeError： object.fromentries is not a function</h2><p><strong>问题现象：</strong></p><p><img src="/2022/06/16/Hexo-Github-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/image-20220616092852726.png" alt="image-20220616092852726"></p><p><strong>问题根因：</strong></p><p>发现问题出现在<code>Node.js</code>的版本上。由于<code>Node.js 10</code>在2021年8月30日已停止服务，新版本的<code>Hexo</code>需要<code>Node.js</code>版本在12.0+。</p><p>但ubuntu默认软件源仓库中<code>Node.js</code>的版本仍为10，故需要额外的步骤来更新：</p><p><strong>解决方案：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">排查根因的方法</span><br>1、全局升级hexo-cli，先hexo version查看当前版本，然后npm i hexo-cli -g，再次hexo version查看是否升级成功。<br><br>2、使用npm install -g npm-check和npm-check，检查系统中的插件是否有升级的，可以看到自己前面都安装了那些插件<br><br>3、使用npm install -g npm-upgrade和npm-upgrade，升级系统中的插件<br><br>4、使用npm update -g和npm update --save<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">进行版本升级</span><br>1、首先更新系统以保证不会发生依赖错误：<br>sudo apt update<br>sudo apt -y upgrade<br><br>2、添加仓库<br>sudo apt update<br>sudo apt -y install curl dirmngr apt-transport-https lsb-release ca-certificates<br>curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -<br><br>3、更新Node<br>sudo apt -y install nodejs<br></code></pre></td></tr></table></figure><h2 id="2、报错-error：RPC-failed；curl-56-GnuTLS-recv-error"><a href="#2、报错-error：RPC-failed；curl-56-GnuTLS-recv-error" class="headerlink" title="2、报错 error：RPC failed；curl 56 GnuTLS recv error"></a>2、报错 error：RPC failed；curl 56 GnuTLS recv error</h2><p><strong>问题现象：</strong></p><p><img src="/2022/06/16/Hexo-Github-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/image-20220616094545213.png" alt="image-20220616094545213"></p><p><strong>问题根因：</strong></p><p>git默认缓存大小不足导致的，解决方案是增大缓存空间。</p><p><strong>解决方案：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt-get install gnutls-bin<br>git config --global http.sslVerify false<br>git config --global http.postBuffer 1048576000<br></code></pre></td></tr></table></figure><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><blockquote><p><a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a></p><p><a href="https://blog.h1msk.cc/2021/09/25/Hexo%E5%8D%87%E7%BA%A7%E4%B8%8E%E9%97%AE%E9%A2%98%E6%8E%92%E9%99%A4-TypeError-line-matchAll-is-not-a-function/">https://blog.h1msk.cc/2021/09/25/Hexo%E5%8D%87%E7%BA%A7%E4%B8%8E%E9%97%AE%E9%A2%98%E6%8E%92%E9%99%A4-TypeError-line-matchAll-is-not-a-function/</a></p><p><a href="https://blog.csdn.net/tmaccs/article/details/101289284">https://blog.csdn.net/tmaccs/article/details/101289284</a></p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
