<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>《深入分析Java Web技术内幕》读书笔记</title>
    <link href="/2022/06/16/%E3%80%8A%E6%B7%B1%E5%85%A5%E5%88%86%E6%9E%90Java-Web%E6%8A%80%E6%9C%AF%E5%86%85%E5%B9%95%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/06/16/%E3%80%8A%E6%B7%B1%E5%85%A5%E5%88%86%E6%9E%90Java-Web%E6%8A%80%E6%9C%AF%E5%86%85%E5%B9%95%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="0x01-总体概述"><a href="#0x01-总体概述" class="headerlink" title="0x01 总体概述"></a>0x01 总体概述</h1><p>0x02 </p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hexo Github 搭建个人网站</title>
    <link href="/2022/06/16/Hexo-Github-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
    <url>/2022/06/16/Hexo-Github-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<h1 id="0x01-准备工作"><a href="#0x01-准备工作" class="headerlink" title="0x01 准备工作"></a>0x01 准备工作</h1><h2 id="1、GitHub账号"><a href="#1、GitHub账号" class="headerlink" title="1、GitHub账号"></a>1、GitHub账号</h2><p>注册一个GitHub账号，具体可参考<a href="https://blog.csdn.net/yaorongke/article/details/119086305">GitHub申请账号</a></p><h2 id="2、安装Git"><a href="#2、安装Git" class="headerlink" title="2、安装Git"></a>2、安装Git</h2><p>安装Git，具体可参考<a href="https://blog.csdn.net/yaorongke/article/details/119085413">Git安装(Windows)</a></p><h2 id="3、安装NodeJS"><a href="#3、安装NodeJS" class="headerlink" title="3、安装NodeJS"></a>3、安装NodeJS</h2><p>安装NodeJs，具体可参考<a href="https://blog.csdn.net/yaorongke/article/details/119084295">NodeJS安装及配置(Windows)</a></p><h2 id="4、安装Hexo"><a href="#4、安装Hexo" class="headerlink" title="4、安装Hexo"></a>4、安装Hexo</h2><p>安装Hexo，具体命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装Hexo</span><br>npm install -g hexo-cli<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看版本</span><br>hexo -v<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建一个项目 hexo-blog并初始化</span><br>hexo init hexo-blog<br>cd hexo-blog<br>npm install<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">本地启动</span><br>hexo g<br>hexo server<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">浏览器访问 http://localhost:4000</span><br></code></pre></td></tr></table></figure><h2 id="5、Git与远程仓库GitHub配置SSH加密"><a href="#5、Git与远程仓库GitHub配置SSH加密" class="headerlink" title="5、Git与远程仓库GitHub配置SSH加密"></a>5、Git与远程仓库GitHub配置SSH加密</h2><p>具体的操作过程，可参考<a href="https://www.cnblogs.com/eidolonw/p/13068373.html">配置SSH加密</a></p><h2 id="6、图片设置"><a href="#6、图片设置" class="headerlink" title="6、图片设置"></a>6、图片设置</h2><p>1、配置Typora偏好设置，将图片文件保存路径设置为.&#x2F;${filename}，即保存与当前正在编辑的文件名相同的同级文件夹下，具体配置如下</p><p><img src="/2022/06/16/Hexo-Github-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/image-20220616102900815.png" alt="image-20220616102900815"></p><p>2、修改hexo中的_config.yml中的post_assert_folder的配置为true，这样，每次<code>hexo new page</code>生成新文章时吗，都会在文章文件同级目录创建一个与文章文件同名的文件夹，后续图片就会存在在此处。</p><p><img src="/2022/06/16/Hexo-Github-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/image-20220616103305419.png" alt="image-20220616103305419"></p><p>3、安装插件hexo-asset-img</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-asset-img --save<br>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s<br></code></pre></td></tr></table></figure><p>4、提交文章</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo clean<br>hexo generate<br>hexo deploy<br></code></pre></td></tr></table></figure><h1 id="0x02-增值服务"><a href="#0x02-增值服务" class="headerlink" title="0x02 增值服务"></a>0x02 增值服务</h1><h2 id="1、更换主题"><a href="#1、更换主题" class="headerlink" title="1、更换主题"></a>1、更换主题</h2><p>安装主题——下载 最新 release 版本 解压到 themes 目录，并将解压出的文件夹重命名为 fluid。</p><p>指定主题——如下修改 Hexo 博客目录中的 _config.yml：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">theme: fluid  # 指定主题<br>language: zh-CN  # 指定语言，会影响主题显示的语言，按需修改<br></code></pre></td></tr></table></figure><p>创建【关于页】——手动创建</p><p>创建「关于页」</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> about<br></code></pre></td></tr></table></figure><p>创建成功后，编辑博客目录下 &#x2F;source&#x2F;about&#x2F;index.md，添加 layout 属性。</p><p>修改后的文件示例如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">---<br><br>title: about<br>date: 2020-02-23 19:20:33<br>layout: about<br>---<br><br>这里写关于页的正文，支持 Markdown, HTML<br></code></pre></td></tr></table></figure><p>本地启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo g -d<br>hexo s<br></code></pre></td></tr></table></figure><p>浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a></p><h2 id="2、个性化页面"><a href="#2、个性化页面" class="headerlink" title="2、个性化页面"></a>2、个性化页面</h2><p>后续待补充</p><p>后续参考文章进行补齐：</p><p><a href="https://yafine-blog.cn/posts/4ab2.html">https://yafine-blog.cn/posts/4ab2.html</a></p><p><a href="https://nflj.github.io/posts/a2ae.html">https://nflj.github.io/posts/a2ae.html</a></p><h1 id="0x03-日常运营"><a href="#0x03-日常运营" class="headerlink" title="0x03 日常运营"></a>0x03 日常运营</h1><h2 id="1、创建文章"><a href="#1、创建文章" class="headerlink" title="1、创建文章"></a>1、创建文章</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">常使用的命令说明</span><br>hexo new page tags/about/...  #创建页面<br>hexo generate &amp;&amp; hexo server #本地生成并预览<br>hexo generate &amp;&amp; hexo deploy #将内容推送到github上<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">命令帮助说明</span><br>Usage: hexo &lt;command&gt;<br>Commands:<br>  clean     Remove generated files and cache.<br>  config    Get or set configurations.<br>  deploy    Deploy your website.<br>  generate  Generate static files.<br>  help      Get help on a command.<br>  init      Create a new Hexo folder.<br>  list      List the information of the site<br>  migrate   Migrate your site from other system to Hexo.<br>  new       Create a new post.<br>  publish   Moves a draft post from _drafts to _posts folder.<br>  render    Render files with renderer plugins.<br>  server    Start the server.<br>  version   Display version information.<br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash">Global Options:</span><br>  --config  Specify config file instead of using _config.yml<br>  --cwd     Specify the CWD<br>  --debug   Display all verbose messages in the terminal<br>  --draft   Display draft posts<br>  --safe    Disable all plugins and scripts<br>  --silent  Hide output on console<br></code></pre></td></tr></table></figure><h2 id="2、上传到Github"><a href="#2、上传到Github" class="headerlink" title="2、上传到Github"></a>2、上传到Github</h2><h3 id="2-1-方式一"><a href="#2-1-方式一" class="headerlink" title="2.1 方式一"></a>2.1 方式一</h3><p>通过hexo-deployer-git直接上传</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">1、安装hexo-deployer-git</span><br>npm install hexo-deployer-git --save<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">2、修改根目录下的 _config.yml，配置 GitHub 相关信息</span><br>deploy:<br>  type: git<br>  repo: https://github.com/yaorongke/yaorongke.github.io.git<br>  branch: main<br>  token: ghp_3KakcaPHerunNRyMerofcFd9pblU282FSbsY<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">其中 token 为 GitHub 的 Personal access tokens</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">3、部署到GitHub</span><br>hexo g -d<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">浏览器访问github网站，部署成功</span><br></code></pre></td></tr></table></figure><p>其中token 为 GitHub 的 Personal access tokens，具体获取方式如下：</p><p><img src="/2022/06/16/Hexo-Github-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/2350558a10d94c8ab4959b04771d2bcc.png" alt="请添加图片描述"></p><h3 id="2-2-方式二"><a href="#2-2-方式二" class="headerlink" title="2.2 方式二"></a>2.2 方式二</h3><p>直接将 <code>public</code> 目录中的文件和目录推送至 <code>GitHub</code> 仓库和分支中。<br><img src="/2022/06/16/Hexo-Github-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/efdfd2d6cf5d4551af0eabfa565f4a1e.png" alt="请添加图片描述"></p><h1 id="0x04-问题记录"><a href="#0x04-问题记录" class="headerlink" title="0x04 问题记录"></a>0x04 问题记录</h1><h2 id="1、报错-FATAL-TypeError：-object-fromentries-is-not-a-function"><a href="#1、报错-FATAL-TypeError：-object-fromentries-is-not-a-function" class="headerlink" title="1、报错 FATAL TypeError： object.fromentries is not a function"></a>1、报错 FATAL TypeError： object.fromentries is not a function</h2><p><strong>问题现象：</strong></p><p><img src="/2022/06/16/Hexo-Github-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/image-20220616092852726.png" alt="image-20220616092852726"></p><p><strong>问题根因：</strong></p><p>发现问题出现在<code>Node.js</code>的版本上。由于<code>Node.js 10</code>在2021年8月30日已停止服务，新版本的<code>Hexo</code>需要<code>Node.js</code>版本在12.0+。</p><p>但ubuntu默认软件源仓库中<code>Node.js</code>的版本仍为10，故需要额外的步骤来更新：</p><p><strong>解决方案：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">排查根因的方法</span><br>1、全局升级hexo-cli，先hexo version查看当前版本，然后npm i hexo-cli -g，再次hexo version查看是否升级成功。<br><br>2、使用npm install -g npm-check和npm-check，检查系统中的插件是否有升级的，可以看到自己前面都安装了那些插件<br><br>3、使用npm install -g npm-upgrade和npm-upgrade，升级系统中的插件<br><br>4、使用npm update -g和npm update --save<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">进行版本升级</span><br>1、首先更新系统以保证不会发生依赖错误：<br>sudo apt update<br>sudo apt -y upgrade<br><br>2、添加仓库<br>sudo apt update<br>sudo apt -y install curl dirmngr apt-transport-https lsb-release ca-certificates<br>curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -<br><br>3、更新Node<br>sudo apt -y install nodejs<br></code></pre></td></tr></table></figure><h2 id="2、报错-error：RPC-failed；curl-56-GnuTLS-recv-error"><a href="#2、报错-error：RPC-failed；curl-56-GnuTLS-recv-error" class="headerlink" title="2、报错 error：RPC failed；curl 56 GnuTLS recv error"></a>2、报错 error：RPC failed；curl 56 GnuTLS recv error</h2><p><strong>问题现象：</strong></p><p><img src="/2022/06/16/Hexo-Github-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/image-20220616094545213.png" alt="image-20220616094545213"></p><p><strong>问题根因：</strong></p><p>git默认缓存大小不足导致的，解决方案是增大缓存空间。</p><p><strong>解决方案：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt-get install gnutls-bin<br>git config --global http.sslVerify false<br>git config --global http.postBuffer 1048576000<br></code></pre></td></tr></table></figure><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><blockquote><p><a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a></p><p><a href="https://blog.h1msk.cc/2021/09/25/Hexo%E5%8D%87%E7%BA%A7%E4%B8%8E%E9%97%AE%E9%A2%98%E6%8E%92%E9%99%A4-TypeError-line-matchAll-is-not-a-function/">https://blog.h1msk.cc/2021/09/25/Hexo%E5%8D%87%E7%BA%A7%E4%B8%8E%E9%97%AE%E9%A2%98%E6%8E%92%E9%99%A4-TypeError-line-matchAll-is-not-a-function/</a></p><p><a href="https://blog.csdn.net/tmaccs/article/details/101289284">https://blog.csdn.net/tmaccs/article/details/101289284</a></p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
